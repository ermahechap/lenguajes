{"ast":null,"code":"import _slicedToArray from \"/home/juanda/Documents/Lenguajes/lenguajes/proyecto/front/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState } from 'react'; // El estado general es este objeto. Se recomienda mantener esta estructura como contenedor de arrays, strings, otros objetos...etc\n\nconst State = {\n  nodeData: {}\n};\n\nconst useGlobalState = () => {\n  const _useState = useState(State),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const actions = action => {\n    const type = action.type,\n          payload = action.payload;\n\n    switch (type) {\n      case \"setState\":\n        {\n          return setState(payload);\n        }\n    }\n  };\n\n  return {\n    state,\n    actions\n  };\n};\n\nexport default useGlobalState;","map":{"version":3,"sources":["/home/juanda/Documents/Lenguajes/lenguajes/proyecto/front/ui/src/GlobalState/useGlobalState.js"],"names":["useState","State","nodeData","useGlobalState","state","setState","actions","action","type","payload"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB,C,CAEA;;AACA,MAAMC,KAAK,GAAG;AACVC,EAAAA,QAAQ,EAAE;AADA,CAAd;;AAMA,MAAMC,cAAc,GAAG,MAAM;AAAA,oBACCH,QAAQ,CAACC,KAAD,CADT;AAAA;AAAA,QAClBG,KADkB;AAAA,QACXC,QADW;;AAGzB,QAAMC,OAAO,GAAGC,MAAM,IAAI;AAAA,UACdC,IADc,GACID,MADJ,CACdC,IADc;AAAA,UACRC,OADQ,GACIF,MADJ,CACRE,OADQ;;AAGtB,YAAQD,IAAR;AACI,WAAK,UAAL;AAAiB;AACb,iBAAOH,QAAQ,CAACI,OAAD,CAAf;AACH;AAHL;AAKH,GARD;;AASA,SAAO;AAAEL,IAAAA,KAAF;AAASE,IAAAA;AAAT,GAAP;AACH,CAbD;;AAeA,eAAeH,cAAf","sourcesContent":["import { useState } from 'react'\n\n// El estado general es este objeto. Se recomienda mantener esta estructura como contenedor de arrays, strings, otros objetos...etc\nconst State = {\n    nodeData: {\n\n    }\n}\n\nconst useGlobalState = () => {\n    const [state, setState] = useState(State)\n\n    const actions = action => {\n        const { type, payload } = action\n\n        switch (type) {\n            case \"setState\": {\n                return setState(payload)\n            }\n        }\n    }\n    return { state, actions }\n}\n\nexport default useGlobalState"]},"metadata":{},"sourceType":"module"}