{"ast":null,"code":"import _objectSpread from \"/home/juanda/Documents/Lenguajes/lenguajes/proyecto/front/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/juanda/Documents/Lenguajes/lenguajes/proyecto/front/ui/src/components/Arbolito dime tu.js\";\n// import React, { useState,useContext,useEffect} from \"react\";\nimport React, { useContext } from \"react\";\nimport Context from '../GlobalState/context';\nimport Tree from 'react-d3-tree';\nimport dataJson from \"../input/input\";\nconst dataFromS = [{\n  type: 'ROOT',\n  id: 1,\n  parent_id: -1,\n  children_id: [2, 3, 4, 27, 33],\n  from: [-1, -1],\n  to: [-1, -1]\n}, {\n  type: 'variable',\n  id: 2,\n  parent_id: 1,\n  children_id: [],\n  from: [1, 0],\n  to: [1, 0],\n  name: 'A',\n  value_id: null,\n  declared_id: null,\n  mentions_ids: [29, 35, 39]\n}, {\n  type: 'variable',\n  id: 3,\n  parent_id: 1,\n  children_id: [],\n  from: [1, 2],\n  to: [1, 2],\n  name: 'B',\n  value_id: null,\n  declared_id: null,\n  mentions_ids: [31]\n}, {\n  type: 'variable',\n  id: 4,\n  parent_id: 1,\n  children_id: [5],\n  from: [1, 4],\n  to: [1, 4],\n  name: 'C',\n  value_id: null,\n  declared_id: null,\n  mentions_ids: [41]\n}, {\n  type: 'subscript',\n  id: 5,\n  parent_id: 4,\n  children_id: [6, 7, 8, 9, 10, 11, 12, 13, 22, 25, 26],\n  from: [1, 6],\n  to: [1, 48]\n}, {\n  type: 'number',\n  id: 6,\n  parent_id: 5,\n  children_id: [],\n  from: [1, 6],\n  to: [1, 6]\n}, {\n  type: 'number',\n  id: 7,\n  parent_id: 5,\n  children_id: [],\n  from: [1, 8],\n  to: [1, 8]\n}, {\n  type: 'number',\n  id: 8,\n  parent_id: 5,\n  children_id: [],\n  from: [1, 12],\n  to: [1, 12]\n}, {\n  type: 'number',\n  id: 9,\n  parent_id: 5,\n  children_id: [],\n  from: [1, 15],\n  to: [1, 15]\n}, {\n  type: 'number',\n  id: 10,\n  parent_id: 5,\n  children_id: [],\n  from: [1, 17],\n  to: [1, 17]\n}, {\n  type: 'variable',\n  id: 11,\n  parent_id: 5,\n  children_id: [],\n  from: [1, 21],\n  to: [1, 21],\n  name: 'D',\n  value_id: null,\n  declared_id: null,\n  mentions_ids: []\n}, {\n  type: 'variable',\n  id: 12,\n  parent_id: 5,\n  children_id: [],\n  from: [1, 23],\n  to: [1, 23],\n  name: 'E',\n  value_id: null,\n  declared_id: null,\n  mentions_ids: []\n}, {\n  type: 'list',\n  id: 13,\n  parent_id: 5,\n  children_id: [14, 16, 18],\n  from: [1, 26],\n  to: [1, 35],\n  elements_ids: [14, 16, 18]\n}, {\n  type: 'composed_element',\n  id: 14,\n  parent_id: 13,\n  children_id: [15],\n  from: [1, 26],\n  to: [1, 26]\n}, {\n  type: 'variable',\n  id: 15,\n  parent_id: 14,\n  children_id: [],\n  from: [1, 26],\n  to: [1, 26],\n  name: 'F',\n  value_id: null,\n  declared_id: null,\n  mentions_ids: []\n}, {\n  type: 'composed_element',\n  id: 16,\n  parent_id: 13,\n  children_id: [17],\n  from: [1, 28],\n  to: [1, 28]\n}, {\n  type: 'variable',\n  id: 17,\n  parent_id: 16,\n  children_id: [],\n  from: [1, 28],\n  to: [1, 28],\n  name: 'G',\n  value_id: null,\n  declared_id: null,\n  mentions_ids: []\n}, {\n  type: 'composed_element',\n  id: 18,\n  parent_id: 13,\n  children_id: [19],\n  from: [1, 30],\n  to: [1, 35]\n}, {\n  type: 'variable',\n  id: 19,\n  parent_id: 18,\n  children_id: [20],\n  from: [1, 30],\n  to: [1, 30],\n  name: 'H',\n  value_id: null,\n  declared_id: null,\n  mentions_ids: []\n}, {\n  type: 'subscript',\n  id: 20,\n  parent_id: 19,\n  children_id: [21],\n  from: [1, 32],\n  to: [1, 33]\n}, {\n  type: 'number',\n  id: 21,\n  parent_id: 20,\n  children_id: [],\n  from: [1, 33],\n  to: [1, 33]\n}, {\n  type: 'variable',\n  id: 22,\n  parent_id: 5,\n  children_id: [23],\n  from: [1, 39],\n  to: [1, 39],\n  name: 'I',\n  value_id: null,\n  declared_id: null,\n  mentions_ids: []\n}, {\n  type: 'subscript',\n  id: 23,\n  parent_id: 22,\n  children_id: [24],\n  from: [1, 41],\n  to: [1, 42]\n}, {\n  type: 'number',\n  id: 24,\n  parent_id: 23,\n  children_id: [],\n  from: [1, 42],\n  to: [1, 42]\n}, {\n  type: 'variable',\n  id: 25,\n  parent_id: 5,\n  children_id: [],\n  from: [1, 46],\n  to: [1, 46],\n  name: 'j',\n  value_id: null,\n  declared_id: null,\n  mentions_ids: []\n}, {\n  type: 'number',\n  id: 26,\n  parent_id: 5,\n  children_id: [],\n  from: [1, 48],\n  to: [1, 48]\n}, {\n  type: 'list',\n  id: 27,\n  parent_id: 1,\n  children_id: [28, 30],\n  from: [2, 1],\n  to: [2, 5],\n  elements_ids: [28, 30]\n}, {\n  type: 'composed_element',\n  id: 28,\n  parent_id: 27,\n  children_id: [29],\n  from: [2, 1],\n  to: [2, 1]\n}, {\n  type: 'variable',\n  id: 29,\n  parent_id: 28,\n  children_id: [],\n  from: [2, 1],\n  to: [2, 1],\n  name: 'A',\n  value_id: null,\n  declared_id: 2,\n  mentions_ids: []\n}, {\n  type: 'composed_element',\n  id: 30,\n  parent_id: 27,\n  children_id: [31, 32],\n  from: [2, 3],\n  to: [2, 5]\n}, {\n  type: 'variable',\n  id: 31,\n  parent_id: 30,\n  children_id: [],\n  from: [2, 3],\n  to: [2, 3],\n  name: 'B',\n  value_id: null,\n  declared_id: 3,\n  mentions_ids: []\n}, {\n  type: 'number',\n  id: 32,\n  parent_id: 30,\n  children_id: [],\n  from: [2, 5],\n  to: [2, 5]\n}, {\n  type: 'list',\n  id: 33,\n  parent_id: 1,\n  children_id: [34, 36],\n  from: [3, 1],\n  to: [3, 8],\n  elements_ids: [34, 36]\n}, {\n  type: 'composed_element',\n  id: 34,\n  parent_id: 33,\n  children_id: [35],\n  from: [3, 1],\n  to: [3, 1]\n}, {\n  type: 'variable',\n  id: 35,\n  parent_id: 34,\n  children_id: [],\n  from: [3, 1],\n  to: [3, 1],\n  name: 'A',\n  value_id: null,\n  declared_id: 2,\n  mentions_ids: []\n}, {\n  type: 'composed_element',\n  id: 36,\n  parent_id: 33,\n  children_id: [37],\n  from: [3, 4],\n  to: [3, 8]\n}, {\n  type: 'list',\n  id: 37,\n  parent_id: 36,\n  children_id: [38, 40],\n  from: [3, 5],\n  to: [3, 7],\n  elements_ids: [38, 40]\n}, {\n  type: 'composed_element',\n  id: 38,\n  parent_id: 37,\n  children_id: [39],\n  from: [3, 5],\n  to: [3, 5]\n}, {\n  type: 'variable',\n  id: 39,\n  parent_id: 38,\n  children_id: [],\n  from: [3, 5],\n  to: [3, 5],\n  name: 'A',\n  value_id: null,\n  declared_id: 2,\n  mentions_ids: []\n}, {\n  type: 'composed_element',\n  id: 40,\n  parent_id: 37,\n  children_id: [41],\n  from: [3, 7],\n  to: [3, 7]\n}, {\n  type: 'variable',\n  id: 41,\n  parent_id: 40,\n  children_id: [],\n  from: [3, 7],\n  to: [3, 7],\n  name: 'C',\n  value_id: null,\n  declared_id: 4,\n  mentions_ids: []\n}]; // const datos = require('./DataFromS.js');\n\nconst colors = {\n  variable: 'red',\n  list: 'green',\n  function: 'blue',\n  dictionary: 'purple',\n  class: 'orange',\n  number: 'aquamarine',\n  subscript: 'gold',\n  composed_element: 'lightblue',\n  variable_reference: 'brown',\n  tuple: 'cadetblue',\n  function_reference: 'deeppink',\n  class_reference: 'mediumspringgreen',\n  calledClass: 'greenyellow',\n  for_block: 'orchid',\n  while_block: 'palegreen',\n  if_block: 'teal',\n  condition: 'sandybrown',\n  composed: 'springgreen',\n  return: 'violet',\n  function_call: 'yellowgreen',\n  class_call: 'yellow'\n};\n\nfunction transformData(data, node) {\n  var strData = '';\n\n  if (node.type === 'variable') {\n    strData = `{\n      \"name\": \"${node.type}\",\n      \"attributes\": {\n      \"name\": \"${node.name}\",\n      \"id\": \"${node.id}\",\n      \"from\": \"${node.from}\",\n      \"to\": \"${node.to}\",\n      \"mentions_ids\": \"${node.mentions_ids}\"\n    },\n      \"nodeSvgShape\": {\n        \"shapeProps\": {\n          \"fill\": \"${colors[node.type]}\",\n          \"r\": 10\n        },\n      },\n      `;\n  } else if (node.type === 'list') {\n    strData = `{\n      \"name\": \"${node.type}\",\n      \"attributes\": {\n      \"id\": \"${node.id}\",\n      \"from\": \"${node.from}\",\n      \"to\": \"${node.to}\",\n      \"mentions_ids\": \"${node.elements_ids}\" \n    },\n    \"nodeSvgShape\": {\n      \"shapeProps\": {\n        \"fill\": \"${colors[node.type]}\",\n        \"r\": 10\n      },\n    },\n  `;\n  } else if (node.type === 'dictionary') {\n    strData = `{\n      \"name\": \"${node.type}\",\n      \"attributes\": {\n      \"id\": \"${node.id}\",\n      \"from\": \"${node.from}\",\n      \"to\": \"${node.to}\",\n      \"mentions_ids\": \"${node.elements_ids}\" \n    },\n    \"nodeSvgShape\": {\n      \"shapeProps\": {\n        \"fill\": \"${colors[node.type]}\",\n        \"r\": 10\n      },\n    },\n    `;\n  } else if (node.type === 'function') {\n    strData = `{\n      \"name\": \"${node.type}\",\n      \"attributes\": {\n      \"name\": \"${node.name}\",\n      \"id\": \"${node.id}\",\n      \"from\": \"${node.from}\",\n      \"to\": \"${node.to}\",\n      \"mentions_ids\": \"${node.elements_ids}\" \n    },\n    \"nodeSvgShape\": {\n      \"shapeProps\": {\n        \"fill\": \"${colors[node.type]}\",\n        \"r\": 10\n      },\n    },\n    `;\n  } else if (node.type === 'class') {\n    strData = `{\n      \"name\": \"${node.type}\",\n      \"attributes\": {\n      \"name\": \"${node.name}\",\n      \"id\": \"${node.id}\",\n      \"from\": \"${node.from}\",\n      \"to\": \"${node.to}\" \n    },\n    \"nodeSvgShape\": {\n      \"shapeProps\": {\n        \"fill\": \"${colors[node.type]}\",\n        \"r\": 10\n      },\n    },\n   `;\n  } else if (node.type === 'number') {\n    strData = `{\n      \"name\": \"${node.type}\",\n      \"attributes\": {\n      \"id\": \"${node.id}\",\n      \"from\": \"${node.from}\",\n      \"to\": \"${node.to}\" \n    },\n    \"nodeSvgShape\": {\n      \"shapeProps\": {\n        \"fill\": \"${colors[node.type]}\",\n        \"r\": 10\n      },\n    },\n   `;\n  } else if (node.type === 'composed_element') {\n    strData = `{\n      \"name\": \"${node.type}\",\n      \"attributes\": {\n      \"id\": \"${node.id}\",\n      \"from\": \"${node.from}\",\n      \"to\": \"${node.to}\" \n    },\n    \"nodeSvgShape\": {\n      \"shapeProps\": {\n        \"fill\": \"${colors[node.type]}\",\n        \"r\": 10\n      },\n    },\n   `;\n  } else if (node.type === 'subscript') {\n    strData = `{\n      \"name\": \"${node.type}\",\n      \"attributes\": {\n      \"id\": \"${node.id}\",\n      \"from\": \"${node.from}\",\n      \"to\": \"${node.to}\" \n    },\n    \"nodeSvgShape\": {\n      \"shapeProps\": {\n        \"fill\": \"${colors[node.type]}\",\n        \"r\": 10\n      },\n    },\n   `;\n  } else if (node.type === 'composed_element') {\n    strData = `{\n      \"name\": \"${node.type}\",\n      \"attributes\": {\n      \"id\": \"${node.id}\",\n      \"from\": \"${node.from}\",\n      \"to\": \"${node.to}\" \n    },\n    \"nodeSvgShape\": {\n      \"shapeProps\": {\n        \"fill\": \"${colors[node.type]}\",\n        \"r\": 10\n      },\n    },\n   `;\n  } else if (node.type === 'variable_reference') {\n    strData = `{\n      \"name\": \"${node.type}\",\n      \"attributes\": {\n      \"id\": \"${node.id}\",\n      \"from\": \"${node.from}\",\n      \"to\": \"${node.to}\" \n    },\n    \"nodeSvgShape\": {\n      \"shapeProps\": {\n        \"fill\": \"${colors[node.type]}\",\n        \"r\": 10\n      },\n    },\n   `;\n  } else if (node.type === 'tuple') {\n    strData = `{\n      \"name\": \"${node.type}\",\n      \"attributes\": {\n      \"id\": \"${node.id}\",\n      \"from\": \"${node.from}\",\n      \"to\": \"${node.to}\" \n    },\n    \"nodeSvgShape\": {\n      \"shapeProps\": {\n        \"fill\": \"${colors[node.type]}\",\n        \"r\": 10\n      },\n    },\n   `;\n  } else if (node.type === 'function_reference') {\n    strData = `{\n      \"name\": \"${node.type}\",\n      \"attributes\": {\n      \"id\": \"${node.id}\",\n      \"from\": \"${node.from}\",\n      \"to\": \"${node.to}\" \n    },\n    \"nodeSvgShape\": {\n      \"shapeProps\": {\n        \"fill\": \"${colors[node.type]}\",\n        \"r\": 10\n      },\n    },\n   `;\n  } else if (node.type === 'class_reference') {\n    strData = `{\n      \"name\": \"${node.type}\",\n      \"attributes\": {\n      \"id\": \"${node.id}\",\n      \"from\": \"${node.from}\",\n      \"to\": \"${node.to}\" \n    },\n    \"nodeSvgShape\": {\n      \"shapeProps\": {\n        \"fill\": \"${colors[node.type]}\",\n        \"r\": 10\n      },\n    },\n   `;\n  } else if (node.type === 'calledClass') {\n    strData = `{\n      \"name\": \"${node.type}\",\n      \"attributes\": {\n      \"id\": \"${node.id}\",\n      \"from\": \"${node.from}\",\n      \"to\": \"${node.to}\" \n    },\n    \"nodeSvgShape\": {\n      \"shapeProps\": {\n        \"fill\": \"${colors[node.type]}\",\n        \"r\": 10\n      },\n    },\n   `;\n  } else if (node.type === 'for_block') {\n    strData = `{\n      \"name\": \"${node.type}\",\n      \"attributes\": {\n      \"id\": \"${node.id}\",\n      \"from\": \"${node.from}\",\n      \"to\": \"${node.to}\" \n    },\n    \"nodeSvgShape\": {\n      \"shapeProps\": {\n        \"fill\": \"${colors[node.type]}\",\n        \"r\": 10\n      },\n    },\n   `;\n  } else if (node.type === 'while_block') {\n    strData = `{\n      \"name\": \"${node.type}\",\n      \"attributes\": {\n      \"id\": \"${node.id}\",\n      \"from\": \"${node.from}\",\n      \"to\": \"${node.to}\" \n    },\n    \"nodeSvgShape\": {\n      \"shapeProps\": {\n        \"fill\": \"${colors[node.type]}\",\n        \"r\": 10\n      },\n    },\n   `;\n  } else if (node.type === 'if_block') {\n    strData = `{\n      \"name\": \"${node.type}\",\n      \"attributes\": {\n      \"id\": \"${node.id}\",\n      \"from\": \"${node.from}\",\n      \"to\": \"${node.to}\" \n    },\n    \"nodeSvgShape\": {\n      \"shapeProps\": {\n        \"fill\": \"${colors[node.type]}\",\n        \"r\": 10\n      },\n    },\n   `;\n  } else if (node.type === 'condition') {\n    strData = `{\n      \"name\": \"${node.type}\",\n      \"attributes\": {\n      \"id\": \"${node.id}\",\n      \"from\": \"${node.from}\",\n      \"to\": \"${node.to}\" \n    },\n    \"nodeSvgShape\": {\n      \"shapeProps\": {\n        \"fill\": \"${colors[node.type]}\",\n        \"r\": 10\n      },\n    },\n   `;\n  } else if (node.type === 'composed') {\n    strData = `{\n      \"name\": \"${node.type}\",\n      \"attributes\": {\n      \"id\": \"${node.id}\",\n      \"from\": \"${node.from}\",\n      \"to\": \"${node.to}\" \n    },\n    \"nodeSvgShape\": {\n      \"shapeProps\": {\n        \"fill\": \"${colors[node.type]}\",\n        \"r\": 10\n      },\n    },\n   `;\n  } else if (node.type === 'return') {\n    strData = `{\n      \"name\": \"${node.type}\",\n      \"attributes\": {\n      \"id\": \"${node.id}\",\n      \"from\": \"${node.from}\",\n      \"to\": \"${node.to}\" \n    },\n    \"nodeSvgShape\": {\n      \"shapeProps\": {\n        \"fill\": \"${colors[node.type]}\",\n        \"r\": 10\n      },\n    },\n   `;\n  } else if (node.type === 'function_call') {\n    strData = `{\n      \"name\": \"${node.type}\",\n      \"attributes\": {\n      \"id\": \"${node.id}\",\n      \"from\": \"${node.from}\",\n      \"to\": \"${node.to}\" \n    },\n    \"nodeSvgShape\": {\n      \"shapeProps\": {\n        \"fill\": \"${colors[node.type]}\",\n        \"r\": 10\n      },\n    },\n   `;\n  } else if (node.type === 'class_call') {\n    strData = `{\n      \"name\": \"${node.type}\",\n      \"attributes\": {\n      \"id\": \"${node.id}\",\n      \"from\": \"${node.from}\",\n      \"to\": \"${node.to}\" \n    },\n    \"nodeSvgShape\": {\n      \"shapeProps\": {\n        \"fill\": \"${colors[node.type]}\",\n        \"r\": 10\n      },\n    },\n   `;\n  } else {\n    strData = `{\n      \"name\": \"${node.type}\",\n      \"attributes\": {\n      \"id\": \"${node.id}\",\n      \"from\": \"${node.from}\",\n      \"to\": \"${node.to}\" \n    },\n    \"nodeSvgShape\": {\n      \"shapeProps\": {\n        \"fill\": \"grey\",\n        \"r\": 10\n      },\n    },\n   `;\n  }\n\n  if (node.children_id.length !== 0) {\n    strData += ' children: [';\n\n    for (let i = 0; i < node.children_id.length; i++) {\n      if (i > 0) {\n        strData += ',';\n      }\n\n      strData += transformData(data, data[node.children_id[i] - 1]);\n    }\n\n    strData += '] ';\n  } else {}\n\n  strData += '}';\n  return strData;\n}\n\nvar datico = transformData(dataJson.data, dataJson.data[0]); // const treee = '['+ datico +']';\n\nconst myTreeData = JSON.stringify(eval(\"(\" + datico + \")\")); // const myTreeData2 = [\n//     {\n//       name: 'ROOT',\n//       attributes: {\n//         keyA: 'val A',\n//         keyB: 'val B',\n//         keyC: 'val C',\n//       },\n//       children: [\n//         {\n//           name: 'Level 2: A',\n//           attributes: {\n//             keyA: 'val A',\n//             keyB: 'val B',\n//             keyC: 'val C',\n//           },\n//           children: [\n//               {\n//                   name: 'Level 2: B',\n//               attributes: {\n//                 keyA: 'val A',\n//                 keyB: 'val B',\n//                 keyC: 'val C',\n//             },\n//         },\n//               {\n//                   name: 'Level 2: A',\n//               attributes: {\n//                 keyA: 'val A',\n//                 keyB: 'val B',\n//                 keyC: 'val C',\n//             }\n//         }\n//           ]\n//         },\n//         {\n//           name: 'Level 2: B',\n//           onClick: () =>{console.log('hello');},\n//         },\n//       ],\n//\n//     },\n//   ];\n\nconst updateHandler = (nodeData, event) => {\n  // if (this.treeTranslateOrZoomTime && this.treeNodeMouseOverTime < this.treeTranslateOrZoomTime) {\n  //   // Make sure that if the user subsequently clicks the current node without mousing off it,\n  //   // the click will be honored.\n  //   this.treeTranslateOrZoomTime = null;\n  //   return;\n  // }\n  // this.props.actions.openThingyDetail(nodeData.name, nodeData.attributes.version);\n  console.log(nodeData.x + ' ' + nodeData.y); // console.log(Tree);\n}; // {/* <Tree data={myTreeData2} orientation = 'vertical' /> */}\n\n\nconst Arbolito = props => {\n  const _useContext = useContext(Context),\n        state = _useContext.state,\n        actions = _useContext.actions;\n\n  const clickHandler = (nodeData, event) => {\n    // if (this.treeTranslateOrZoomTime && this.treeNodeMouseOverTime < this.treeTranslateOrZoomTime) {\n    //   // Make sure that if the user subsequently clicks the current node without mousing off it,\n    //   // the click will be honored.\n    //   this.treeTranslateOrZoomTime = null;\n    //   return;\n    // }\n    // this.props.actions.openThingyDetail(nodeData.name, nodeData.attributes.version);\n    // console.log(nodeData.x+' '+nodeData.y);\n    // console.log(Tree);\n    console.log(state);\n    actions({\n      type: 'setState',\n      payload: _objectSpread({}, state, {\n        nodeData: nodeData\n      })\n    });\n    console.log(nodeData); // props.node.push(nodeData);\n  };\n\n  return (//{/* <Tree /> will fill width/height of its container; in this case `#treeWrapper` */}\n    React.createElement(\"div\", {\n      id: \"treeWrapper\",\n      style: {\n        width: '75em',\n        height: '20em'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545\n      },\n      __self: this\n    }, React.createElement(Tree, {\n      data: JSON.parse(myTreeData),\n      orientation: \"vertical\",\n      onClick: clickHandler,\n      onUpdate: updateHandler,\n      collapsible: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => console.log(dataJson.data[0]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547\n      },\n      __self: this\n    }, \"debug\"), React.createElement(\"dataFromS\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551\n      },\n      __self: this\n    }))\n  );\n};\n\nexport default Arbolito;","map":{"version":3,"sources":["/home/juanda/Documents/Lenguajes/lenguajes/proyecto/front/ui/src/components/Arbolito dime tu.js"],"names":["React","useContext","Context","Tree","dataJson","dataFromS","type","id","parent_id","children_id","from","to","name","value_id","declared_id","mentions_ids","elements_ids","colors","variable","list","function","dictionary","class","number","subscript","composed_element","variable_reference","tuple","function_reference","class_reference","calledClass","for_block","while_block","if_block","condition","composed","return","function_call","class_call","transformData","data","node","strData","length","i","datico","myTreeData","JSON","stringify","eval","updateHandler","nodeData","event","console","log","x","y","Arbolito","props","state","actions","clickHandler","payload","width","height","parse"],"mappings":"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","sourcesContent":["// import React, { useState,useContext,useEffect} from \"react\";\nimport React, { useContext } from \"react\";\nimport Context from '../GlobalState/context'\nimport Tree from 'react-d3-tree';\nimport dataJson from \"../input/input\";\n\nconst dataFromS = [\n  {type: 'ROOT', id: 1, parent_id:-1, children_id: [2, 3, 4, 27, 33], from: [-1, -1], to: [-1, -1]},\n  {type: 'variable', id: 2, parent_id:1, children_id: [], from: [1, 0], to: [1, 0], name: 'A', value_id: null, declared_id: null, mentions_ids: [29, 35, 39]},\n  {type: 'variable', id: 3, parent_id:1, children_id: [], from: [1, 2], to: [1, 2], name: 'B', value_id: null, declared_id: null, mentions_ids: [31]},\n  {type: 'variable', id: 4, parent_id:1, children_id: [5], from: [1, 4], to: [1, 4], name: 'C', value_id: null, declared_id: null, mentions_ids: [41]},\n  {type: 'subscript', id: 5, parent_id:4, children_id: [6, 7, 8, 9, 10, 11, 12, 13, 22, 25, 26], from: [1, 6], to: [1, 48]},\n  {type: 'number', id: 6, parent_id:5, children_id: [], from: [1, 6], to: [1, 6]},\n  {type: 'number', id: 7, parent_id:5, children_id: [], from: [1, 8], to: [1, 8]},\n  {type: 'number', id: 8, parent_id:5, children_id: [], from: [1, 12], to: [1, 12]},\n  {type: 'number', id: 9, parent_id:5, children_id: [], from: [1, 15], to: [1, 15]},\n  {type: 'number', id: 10, parent_id:5, children_id: [], from: [1, 17], to: [1, 17]},\n  {type: 'variable', id: 11, parent_id:5, children_id: [], from: [1, 21], to: [1, 21], name: 'D', value_id: null, declared_id: null, mentions_ids: []},\n  {type: 'variable', id: 12, parent_id:5, children_id: [], from: [1, 23], to: [1, 23], name: 'E', value_id: null, declared_id: null, mentions_ids: []},\n  {type: 'list', id: 13, parent_id:5, children_id: [14, 16, 18], from: [1, 26], to: [1, 35], elements_ids: [14, 16, 18]},\n  {type: 'composed_element', id: 14, parent_id:13, children_id: [15], from: [1, 26], to: [1, 26]},\n  {type: 'variable', id: 15, parent_id:14, children_id: [], from: [1, 26], to: [1, 26], name: 'F', value_id: null, declared_id: null, mentions_ids: []},\n  {type: 'composed_element', id: 16, parent_id:13, children_id: [17], from: [1, 28], to: [1, 28]},\n  {type: 'variable', id: 17, parent_id:16, children_id: [], from: [1, 28], to: [1, 28], name: 'G', value_id: null, declared_id: null, mentions_ids: []},\n  {type: 'composed_element', id: 18, parent_id:13, children_id: [19], from: [1, 30], to: [1, 35]},\n  {type: 'variable', id: 19, parent_id:18, children_id: [20], from: [1, 30], to: [1, 30], name: 'H', value_id: null, declared_id: null, mentions_ids: []},\n  {type: 'subscript', id: 20, parent_id:19, children_id: [21], from: [1, 32], to: [1, 33]},\n  {type: 'number', id: 21, parent_id:20, children_id: [], from: [1, 33], to: [1, 33]},\n  {type: 'variable', id: 22, parent_id:5, children_id: [23], from: [1, 39], to: [1, 39], name: 'I', value_id: null, declared_id: null, mentions_ids: []},\n  {type: 'subscript', id: 23, parent_id:22, children_id: [24], from: [1, 41], to: [1, 42]},\n  {type: 'number', id: 24, parent_id:23, children_id: [], from: [1, 42], to: [1, 42]},\n  {type: 'variable', id: 25, parent_id:5, children_id: [], from: [1, 46], to: [1, 46], name: 'j', value_id: null, declared_id: null, mentions_ids: []},\n  {type: 'number', id: 26, parent_id:5, children_id: [], from: [1, 48], to: [1, 48]},\n  {type: 'list', id: 27, parent_id:1, children_id: [28, 30], from: [2, 1], to: [2, 5], elements_ids: [28, 30]},\n  {type: 'composed_element', id: 28, parent_id:27, children_id: [29], from: [2, 1], to: [2, 1]},\n  {type: 'variable', id: 29, parent_id:28, children_id: [], from: [2, 1], to: [2, 1], name: 'A', value_id: null, declared_id: 2, mentions_ids: []},\n  {type: 'composed_element', id: 30, parent_id:27, children_id: [31, 32], from: [2, 3], to: [2, 5]},\n  {type: 'variable', id: 31, parent_id:30, children_id: [], from: [2, 3], to: [2, 3], name: 'B', value_id: null, declared_id: 3, mentions_ids: []},\n  {type: 'number', id: 32, parent_id:30, children_id: [], from: [2, 5], to: [2, 5]},\n  {type: 'list', id: 33, parent_id:1, children_id: [34, 36], from: [3, 1], to: [3, 8], elements_ids: [34, 36]},\n  {type: 'composed_element', id: 34, parent_id:33, children_id: [35], from: [3, 1], to: [3, 1]},\n  {type: 'variable', id: 35, parent_id:34, children_id: [], from: [3, 1], to: [3, 1], name: 'A', value_id: null, declared_id: 2, mentions_ids: []},\n  {type: 'composed_element', id: 36, parent_id:33, children_id: [37], from: [3, 4], to: [3, 8]},\n  {type: 'list', id: 37, parent_id:36, children_id: [38, 40], from: [3, 5], to: [3, 7], elements_ids: [38, 40]},\n  {type: 'composed_element', id: 38, parent_id:37, children_id: [39], from: [3, 5], to: [3, 5]},\n  {type: 'variable', id: 39, parent_id:38, children_id: [], from: [3, 5], to: [3, 5], name: 'A', value_id: null, declared_id: 2, mentions_ids: []},\n  {type: 'composed_element', id: 40, parent_id:37, children_id: [41], from: [3, 7], to: [3, 7]},\n  {type: 'variable', id: 41, parent_id:40, children_id: [], from: [3, 7], to: [3, 7], name: 'C', value_id: null, declared_id: 4, mentions_ids: []},\n  ]\n\n// const datos = require('./DataFromS.js');\n\n\nconst colors = {\n  variable: 'red',\n  list: 'green',\n  function: 'blue',\n  dictionary: 'purple',\n  class: 'orange',\n  number: 'aquamarine',\n  subscript: 'gold',\n  composed_element: 'lightblue',\n  variable_reference: 'brown',\n  tuple: 'cadetblue',\n  function_reference: 'deeppink',\n  class_reference: 'mediumspringgreen',\n  calledClass: 'greenyellow',\n  for_block: 'orchid',\n  while_block: 'palegreen',\n  if_block: 'teal',\n  condition: 'sandybrown',\n  composed: 'springgreen',\n  return: 'violet',\n  function_call: 'yellowgreen',\n  class_call: 'yellow',\n}\n\nfunction transformData(data,node){\n  var strData = '';\n  if(node.type==='variable'){\n    strData = `{\n      \"name\": \"${node.type}\",\n      \"attributes\": {\n      \"name\": \"${node.name}\",\n      \"id\": \"${node.id}\",\n      \"from\": \"${node.from}\",\n      \"to\": \"${node.to}\",\n      \"mentions_ids\": \"${node.mentions_ids}\"\n    },\n      \"nodeSvgShape\": {\n        \"shapeProps\": {\n          \"fill\": \"${colors[node.type]}\",\n          \"r\": 10\n        },\n      },\n      `\n  }else if(node.type==='list'){\n    strData = `{\n      \"name\": \"${node.type}\",\n      \"attributes\": {\n      \"id\": \"${node.id}\",\n      \"from\": \"${node.from}\",\n      \"to\": \"${node.to}\",\n      \"mentions_ids\": \"${node.elements_ids}\" \n    },\n    \"nodeSvgShape\": {\n      \"shapeProps\": {\n        \"fill\": \"${colors[node.type]}\",\n        \"r\": 10\n      },\n    },\n  `\n  }else if(node.type==='dictionary'){\n    strData = `{\n      \"name\": \"${node.type}\",\n      \"attributes\": {\n      \"id\": \"${node.id}\",\n      \"from\": \"${node.from}\",\n      \"to\": \"${node.to}\",\n      \"mentions_ids\": \"${node.elements_ids}\" \n    },\n    \"nodeSvgShape\": {\n      \"shapeProps\": {\n        \"fill\": \"${colors[node.type]}\",\n        \"r\": 10\n      },\n    },\n    `\n  }else if(node.type==='function'){\n    strData = `{\n      \"name\": \"${node.type}\",\n      \"attributes\": {\n      \"name\": \"${node.name}\",\n      \"id\": \"${node.id}\",\n      \"from\": \"${node.from}\",\n      \"to\": \"${node.to}\",\n      \"mentions_ids\": \"${node.elements_ids}\" \n    },\n    \"nodeSvgShape\": {\n      \"shapeProps\": {\n        \"fill\": \"${colors[node.type]}\",\n        \"r\": 10\n      },\n    },\n    `\n  }else if(node.type==='class'){\n    strData = `{\n      \"name\": \"${node.type}\",\n      \"attributes\": {\n      \"name\": \"${node.name}\",\n      \"id\": \"${node.id}\",\n      \"from\": \"${node.from}\",\n      \"to\": \"${node.to}\" \n    },\n    \"nodeSvgShape\": {\n      \"shapeProps\": {\n        \"fill\": \"${colors[node.type]}\",\n        \"r\": 10\n      },\n    },\n   `\n  }else if(node.type==='number'){\n    strData = `{\n      \"name\": \"${node.type}\",\n      \"attributes\": {\n      \"id\": \"${node.id}\",\n      \"from\": \"${node.from}\",\n      \"to\": \"${node.to}\" \n    },\n    \"nodeSvgShape\": {\n      \"shapeProps\": {\n        \"fill\": \"${colors[node.type]}\",\n        \"r\": 10\n      },\n    },\n   `\n  }else if(node.type==='composed_element'){\n    strData = `{\n      \"name\": \"${node.type}\",\n      \"attributes\": {\n      \"id\": \"${node.id}\",\n      \"from\": \"${node.from}\",\n      \"to\": \"${node.to}\" \n    },\n    \"nodeSvgShape\": {\n      \"shapeProps\": {\n        \"fill\": \"${colors[node.type]}\",\n        \"r\": 10\n      },\n    },\n   `\n  }else if(node.type==='subscript'){\n    strData = `{\n      \"name\": \"${node.type}\",\n      \"attributes\": {\n      \"id\": \"${node.id}\",\n      \"from\": \"${node.from}\",\n      \"to\": \"${node.to}\" \n    },\n    \"nodeSvgShape\": {\n      \"shapeProps\": {\n        \"fill\": \"${colors[node.type]}\",\n        \"r\": 10\n      },\n    },\n   `\n  }else if(node.type==='composed_element'){\n    strData = `{\n      \"name\": \"${node.type}\",\n      \"attributes\": {\n      \"id\": \"${node.id}\",\n      \"from\": \"${node.from}\",\n      \"to\": \"${node.to}\" \n    },\n    \"nodeSvgShape\": {\n      \"shapeProps\": {\n        \"fill\": \"${colors[node.type]}\",\n        \"r\": 10\n      },\n    },\n   `\n  }else if(node.type==='variable_reference'){\n    strData = `{\n      \"name\": \"${node.type}\",\n      \"attributes\": {\n      \"id\": \"${node.id}\",\n      \"from\": \"${node.from}\",\n      \"to\": \"${node.to}\" \n    },\n    \"nodeSvgShape\": {\n      \"shapeProps\": {\n        \"fill\": \"${colors[node.type]}\",\n        \"r\": 10\n      },\n    },\n   `\n  }else if(node.type==='tuple'){\n    strData = `{\n      \"name\": \"${node.type}\",\n      \"attributes\": {\n      \"id\": \"${node.id}\",\n      \"from\": \"${node.from}\",\n      \"to\": \"${node.to}\" \n    },\n    \"nodeSvgShape\": {\n      \"shapeProps\": {\n        \"fill\": \"${colors[node.type]}\",\n        \"r\": 10\n      },\n    },\n   `\n  }else if(node.type==='function_reference'){\n    strData = `{\n      \"name\": \"${node.type}\",\n      \"attributes\": {\n      \"id\": \"${node.id}\",\n      \"from\": \"${node.from}\",\n      \"to\": \"${node.to}\" \n    },\n    \"nodeSvgShape\": {\n      \"shapeProps\": {\n        \"fill\": \"${colors[node.type]}\",\n        \"r\": 10\n      },\n    },\n   `\n  }else if(node.type==='class_reference'){\n    strData = `{\n      \"name\": \"${node.type}\",\n      \"attributes\": {\n      \"id\": \"${node.id}\",\n      \"from\": \"${node.from}\",\n      \"to\": \"${node.to}\" \n    },\n    \"nodeSvgShape\": {\n      \"shapeProps\": {\n        \"fill\": \"${colors[node.type]}\",\n        \"r\": 10\n      },\n    },\n   `\n  }else if(node.type==='calledClass'){\n    strData = `{\n      \"name\": \"${node.type}\",\n      \"attributes\": {\n      \"id\": \"${node.id}\",\n      \"from\": \"${node.from}\",\n      \"to\": \"${node.to}\" \n    },\n    \"nodeSvgShape\": {\n      \"shapeProps\": {\n        \"fill\": \"${colors[node.type]}\",\n        \"r\": 10\n      },\n    },\n   `\n  }else if(node.type==='for_block'){\n    strData = `{\n      \"name\": \"${node.type}\",\n      \"attributes\": {\n      \"id\": \"${node.id}\",\n      \"from\": \"${node.from}\",\n      \"to\": \"${node.to}\" \n    },\n    \"nodeSvgShape\": {\n      \"shapeProps\": {\n        \"fill\": \"${colors[node.type]}\",\n        \"r\": 10\n      },\n    },\n   `\n  }else if(node.type==='while_block'){\n    strData = `{\n      \"name\": \"${node.type}\",\n      \"attributes\": {\n      \"id\": \"${node.id}\",\n      \"from\": \"${node.from}\",\n      \"to\": \"${node.to}\" \n    },\n    \"nodeSvgShape\": {\n      \"shapeProps\": {\n        \"fill\": \"${colors[node.type]}\",\n        \"r\": 10\n      },\n    },\n   `\n  }else if(node.type==='if_block'){\n    strData = `{\n      \"name\": \"${node.type}\",\n      \"attributes\": {\n      \"id\": \"${node.id}\",\n      \"from\": \"${node.from}\",\n      \"to\": \"${node.to}\" \n    },\n    \"nodeSvgShape\": {\n      \"shapeProps\": {\n        \"fill\": \"${colors[node.type]}\",\n        \"r\": 10\n      },\n    },\n   `\n  }else if(node.type==='condition'){\n    strData = `{\n      \"name\": \"${node.type}\",\n      \"attributes\": {\n      \"id\": \"${node.id}\",\n      \"from\": \"${node.from}\",\n      \"to\": \"${node.to}\" \n    },\n    \"nodeSvgShape\": {\n      \"shapeProps\": {\n        \"fill\": \"${colors[node.type]}\",\n        \"r\": 10\n      },\n    },\n   `\n  }else if(node.type==='composed'){\n    strData = `{\n      \"name\": \"${node.type}\",\n      \"attributes\": {\n      \"id\": \"${node.id}\",\n      \"from\": \"${node.from}\",\n      \"to\": \"${node.to}\" \n    },\n    \"nodeSvgShape\": {\n      \"shapeProps\": {\n        \"fill\": \"${colors[node.type]}\",\n        \"r\": 10\n      },\n    },\n   `\n  }else if(node.type==='return'){\n    strData = `{\n      \"name\": \"${node.type}\",\n      \"attributes\": {\n      \"id\": \"${node.id}\",\n      \"from\": \"${node.from}\",\n      \"to\": \"${node.to}\" \n    },\n    \"nodeSvgShape\": {\n      \"shapeProps\": {\n        \"fill\": \"${colors[node.type]}\",\n        \"r\": 10\n      },\n    },\n   `\n  }else if(node.type==='function_call'){\n    strData = `{\n      \"name\": \"${node.type}\",\n      \"attributes\": {\n      \"id\": \"${node.id}\",\n      \"from\": \"${node.from}\",\n      \"to\": \"${node.to}\" \n    },\n    \"nodeSvgShape\": {\n      \"shapeProps\": {\n        \"fill\": \"${colors[node.type]}\",\n        \"r\": 10\n      },\n    },\n   `\n  }else if(node.type==='class_call'){\n    strData = `{\n      \"name\": \"${node.type}\",\n      \"attributes\": {\n      \"id\": \"${node.id}\",\n      \"from\": \"${node.from}\",\n      \"to\": \"${node.to}\" \n    },\n    \"nodeSvgShape\": {\n      \"shapeProps\": {\n        \"fill\": \"${colors[node.type]}\",\n        \"r\": 10\n      },\n    },\n   `\n  }else{\n    strData = `{\n      \"name\": \"${node.type}\",\n      \"attributes\": {\n      \"id\": \"${node.id}\",\n      \"from\": \"${node.from}\",\n      \"to\": \"${node.to}\" \n    },\n    \"nodeSvgShape\": {\n      \"shapeProps\": {\n        \"fill\": \"grey\",\n        \"r\": 10\n      },\n    },\n   `\n  }\n  \n  if(node.children_id.length!==0){\n    strData += ' children: ['\n    for(let i=0;i<node.children_id.length;i++){\n      if(i>0){\n        strData+=','\n      }\n      strData+= transformData(data,data[node.children_id[i]-1]);\n    }\n    strData += '] '\n  }else{\n  \n  }\n  strData += '}'\n  \n  return strData;\n}\n\n\nvar datico = transformData(dataJson.data, dataJson.data[0]);\n// const treee = '['+ datico +']';\nconst myTreeData = JSON.stringify(eval(\"(\" + datico + \")\"));\n\n// const myTreeData2 = [\n//     {\n//       name: 'ROOT',\n//       attributes: {\n//         keyA: 'val A',\n//         keyB: 'val B',\n//         keyC: 'val C',\n//       },\n//       children: [\n//         {\n//           name: 'Level 2: A',\n//           attributes: {\n//             keyA: 'val A',\n//             keyB: 'val B',\n//             keyC: 'val C',\n//           },\n//           children: [\n//               {\n//                   name: 'Level 2: B',\n//               attributes: {\n//                 keyA: 'val A',\n//                 keyB: 'val B',\n//                 keyC: 'val C',\n//             },\n//         },\n//               {\n//                   name: 'Level 2: A',\n//               attributes: {\n//                 keyA: 'val A',\n//                 keyB: 'val B',\n//                 keyC: 'val C',\n//             }\n//         }\n//           ]\n//         },\n//         {\n//           name: 'Level 2: B',\n//           onClick: () =>{console.log('hello');},\n//         },\n//       ],\n//\n//     },\n//   ];\n\n\n  const updateHandler = (nodeData, event) => {\n    // if (this.treeTranslateOrZoomTime && this.treeNodeMouseOverTime < this.treeTranslateOrZoomTime) {\n    //   // Make sure that if the user subsequently clicks the current node without mousing off it,\n    //   // the click will be honored.\n    //   this.treeTranslateOrZoomTime = null;\n    //   return;\n    // }\n    // this.props.actions.openThingyDetail(nodeData.name, nodeData.attributes.version);\n    console.log(nodeData.x+' '+nodeData.y);\n    // console.log(Tree);\n    \n    \n  }\n\n  // {/* <Tree data={myTreeData2} orientation = 'vertical' /> */}\n\n  \n  const Arbolito = (props)=> {\n\n      const {state, actions} = useContext(Context);\n\n      const clickHandler = (nodeData, event) => {\n        // if (this.treeTranslateOrZoomTime && this.treeNodeMouseOverTime < this.treeTranslateOrZoomTime) {\n        //   // Make sure that if the user subsequently clicks the current node without mousing off it,\n        //   // the click will be honored.\n        //   this.treeTranslateOrZoomTime = null;\n        //   return;\n        // }\n        // this.props.actions.openThingyDetail(nodeData.name, nodeData.attributes.version);\n        // console.log(nodeData.x+' '+nodeData.y);\n        // console.log(Tree);\n\n        console.log(state);\n        actions({\n          type: 'setState',\n          payload: {...state, nodeData: nodeData}\n        });\n\n        console.log(nodeData);\n        // props.node.push(nodeData);\n      };\n      \n      return (\n        //{/* <Tree /> will fill width/height of its container; in this case `#treeWrapper` */}\n        <div id=\"treeWrapper\" style={{width: '75em', height: '20em'}}>\n          <Tree data={JSON.parse(myTreeData)} orientation = 'vertical' onClick={clickHandler} onUpdate={updateHandler} collapsible={false} />\n          <button onClick={() => console.log(dataJson.data[0])}>\n            debug\n          </button>\n          \n          <dataFromS/>\n        </div>\n\n      );\n\n  }\n\n  export default Arbolito;"]},"metadata":{},"sourceType":"module"}